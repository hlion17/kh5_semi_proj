		try {
			lf = req.getSession().getAttribute(like);
			
			req.getSession().setAttribute(like, true);
			lf = req.getSession().getAttribute(like);
			System.out.println("true lf : " + lf);
			
		} catch (NullPointerException e) {
			
			req.getSession().setAttribute(like, false);
			System.out.println("false lf : " + lf);
			
			boardService.addLike(boardno, req);
		}
-----------------------------------------------------------------------

//			String likeFlagFirst = "likeFlagFirst_" + boardno.getBoardno();
//			req.getSession().setAttribute(likeFlagFirst, false);

//		//플래그 기본값 1
//		req.getSession().setAttribute(likeFlag, 0);

--21:45 null

//		//세션에 추천플래그가 없으면 생성, 있으면 값을 유지하기위해 패스(해당글에 단한번만 추천해야하므로)
//		System.out.println("[TEST]lf : " + lf);
//		if( lf == null ) {
//			System.out.println("[TEST]추천플래그가 없는 상태, 새로생성");
//			req.getSession().setAttribute(likeFlag, false);
//		}


--------서블릿 if문 널활용 실패 0320 0826-----------------------
package util;
import java.util.Map;
import java.util.List;

public class Util {		

	/*
	 * 공백 또는 null 체크
	 */

	public static boolean isEmpty(Object obj) {
		
		if(obj == null) return true;
		
		if ((obj instanceof String) && (((String)obj).trim().length() == 0)) { return true; }
	        if (obj instanceof Map) { return ((Map<?, ?>) obj).isEmpty(); }
	        if (obj instanceof Map) { return ((Map<?, ?>)obj).isEmpty(); } 
	        if (obj instanceof List) { return ((List<?>)obj).isEmpty(); }
	        if (obj instanceof Object[]) { return (((Object[])obj).length == 0); }
	        
		return false;
		
	}
	
}

//RecipeContentController_backup---------------------------------------------------
//package controller.community.recipeBoard;
//
//import java.io.IOException;
//
//import javax.servlet.ServletException;
//import javax.servlet.annotation.WebServlet;
//import javax.servlet.http.HttpServlet;
//import javax.servlet.http.HttpServletRequest;
//import javax.servlet.http.HttpServletResponse;
//
//import dto.Recipe;
//import dto.RecipeFile;
//import service.face.RecipeService;
//import service.impl.RecipeServiceImpl;
//
//@WebServlet("/recipe/content")
//public class RecipeContentController_backup extends HttpServlet {
//	private static final long serialVersionUID = 1L;
//
//	private RecipeService boardService = new RecipeServiceImpl();
//	
//	@Override
//	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
//		System.out.println("[TEST] RecipeContentController( /recipe/content ) [GET] 호출");
//				
//로그인 되어있지 않으면 리다이렉트 
		if( req.getSession().getAttribute("login") == null ) {
			resp.sendRedirect("/main.jsp");
			
			return;
		}

////		System.out.println(req.getAttribute("like"));
//		
//		//전달파라미터 얻기 - boardno
//		Recipe boardno = boardService.getBoardno(req);
//
//		//상세보기 결과 조회
//		Recipe viewBoard = boardService.view(boardno); 
//		
//		//조회결과 MODEL값 전달
//		req.setAttribute("viewBoard", viewBoard);
//		
////		System.out.println( "viewBoard.getBoardno() : " + viewBoard.getBoardno() );
////		System.out.println( "viewBoard.getLike() : " + viewBoard.getLike() );
//		
////		//boardno 계승을 위해
////		req.setAttribute("board_no", viewBoard.getBoardno());
////		System.out.println("setAttribute : " + viewBoard.getBoardno());
//		
//		//닉네임 전달
//		req.setAttribute("writerNick", boardService.getNick(viewBoard));
////		System.out.println(req.getAttribute("writerNick"));
//		
//		//첨부파일 정보 조회
//		RecipeFile boardFile = boardService.viewFile(viewBoard);
//		
//		//첨부파일 정보 MODEL값 전달
//		req.setAttribute("boardFile", boardFile);
//		
//		//JSP를 VIEW로 지정, View로 응답
//		System.out.println("[TEST] RecipeContentController - view.jsp로 포워드");
//		System.out.println();
//		req.getRequestDispatcher("/WEB-INF/views/community/board/view.jsp").forward(req, resp);
//	}
//	
////	@Override
////	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
////		System.out.println("[TEST] RecipeContentController( /recipe/content ) [POST] 호출");
////		
////		//로그인 되어있지 않으면 리다이렉트 
////		if( req.getSession().getAttribute("login") == null ) {
////			resp.sendRedirect("/main.jsp");
////			
////			return;
////		}
////		
////		doGet(req, resp);
////		//전달파라미터 얻기 - boardno
////		Recipe boardno = boardService.getBoardno(req);
//////		boardno = boardService.getLike(req); 
////		
////		//전달파라미터 판단 - like
////		if ( 1 == req.getParameter("like") );
////		
////		//받은 like값에 + 1 해서 db에 넣기
////				
////		//상세보기 결과 조회
////		Recipe viewBoard = boardService.view(boardno); 
////		
////		//조회결과 MODEL값 전달
////		req.setAttribute("viewBoard", viewBoard);
//		
////		//추천수 전달
////		req.setAttribute("like", "5");
////		doGet(req, resp);
//		
////		System.out.println( "resp : " + resp );
////		resp.setHeader("like", "5");
////		System.out.println( resp.getHeader("like") );
////		System.out.println( "resp : " + resp );
////	}
//}
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
